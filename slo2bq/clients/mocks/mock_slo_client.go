// Code generated by MockGen. DO NOT EDIT.
// Source: slo2bq/clients (interfaces: SLOClient)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
	clients "slo2bq/clients"
)

// MockSLOClient is a mock of SLOClient interface
type MockSLOClient struct {
	ctrl     *gomock.Controller
	recorder *MockSLOClientMockRecorder
}

// MockSLOClientMockRecorder is the mock recorder for MockSLOClient
type MockSLOClientMockRecorder struct {
	mock *MockSLOClient
}

// NewMockSLOClient creates a new mock instance
func NewMockSLOClient(ctrl *gomock.Controller) *MockSLOClient {
	mock := &MockSLOClient{ctrl: ctrl}
	mock.recorder = &MockSLOClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockSLOClient) EXPECT() *MockSLOClientMockRecorder {
	return m.recorder
}

// SLOs mocks base method
func (m *MockSLOClient) SLOs(arg0 *clients.Service) ([]*clients.SLO, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SLOs", arg0)
	ret0, _ := ret[0].([]*clients.SLO)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SLOs indicates an expected call of SLOs
func (mr *MockSLOClientMockRecorder) SLOs(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SLOs", reflect.TypeOf((*MockSLOClient)(nil).SLOs), arg0)
}

// Services mocks base method
func (m *MockSLOClient) Services() ([]*clients.Service, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Services")
	ret0, _ := ret[0].([]*clients.Service)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Services indicates an expected call of Services
func (mr *MockSLOClientMockRecorder) Services() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Services", reflect.TypeOf((*MockSLOClient)(nil).Services))
}
